<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="bot_2interface_8h" kind="file" language="C++">
    <compoundname>interface.h</compoundname>
    <includedby refid="bot-main_8c" local="yes">bot/bot-main.c</includedby>
    <includedby refid="bot_8c" local="yes">bot/bot.c</includedby>
      <sectiondef kind="func">
      <memberdef kind="function" id="bot_2interface_8h_1aeaf835741929328f7b63aa297cae7b9d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mostrar_tabuleiro</definition>
        <argsstring>(ESTADO *estado, FILE *stream)</argsstring>
        <name>mostrar_tabuleiro</name>
        <param>
          <type><ref refid="structESTADO" kindref="compound">ESTADO</ref> *</type>
          <declname>estado</declname>
        </param>
        <param>
          <type>FILE *</type>
          <declname>stream</declname>
        </param>
        <briefdescription>
<para>Mostra o tabuleiro no ecrã como também o insere num ficheiro quando efetuado o comando &quot;gr&quot;. O tabuleiro é apresentado na stream fornecida como argumento que será um apontador para um ficheiro ou stdout. Sempre que efetuamos esse comando &quot;alteramos o tabuleiro&quot;, isto é, preenchemos ele do zero, algo que é útil em diversas situações e potencial de ser reaproveitado tanto para apresentar o tabuleiro após jogadas normais como para apresentar o tabuleiro após um comando &quot;pos&quot;. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>estado</parametername>
</parameternamelist>
<parameterdescription>
<para>Apontador para o estado </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>stream</parametername>
</parameternamelist>
<parameterdescription>
<para>Apontador para FILE </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="bot/interface.h" line="17" column="6" bodyfile="bot/interface.c" bodystart="91" bodyend="112" declfile="bot/interface.h" declline="17" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="bot_2interface_8h_1a1fd532d3d252ff42d406a15757e2a401" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mostrar_prompt</definition>
        <argsstring>(ESTADO *e)</argsstring>
        <name>mostrar_prompt</name>
        <param>
          <type><ref refid="structESTADO" kindref="compound">ESTADO</ref> *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
<para>Função que apresenta o prompt, o qual contém o número do jogador atual,o número e jogadas e o número de comandos efetuados. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>e</parametername>
</parameternamelist>
<parameterdescription>
<para>Apontador para o estado </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="bot/interface.h" line="22" column="6" bodyfile="bot/interface.c" bodystart="114" bodyend="125" declfile="bot/interface.h" declline="22" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="bot_2interface_8h_1a23d957b85a87301d978ca029c5f44e68" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char* obtem_jogada</definition>
        <argsstring>(ESTADO *e, int indice_jogada, int jogador)</argsstring>
        <name>obtem_jogada</name>
        <param>
          <type><ref refid="structESTADO" kindref="compound">ESTADO</ref> *</type>
          <declname>e</declname>
        </param>
        <param>
          <type>int</type>
          <declname>indice_jogada</declname>
        </param>
        <param>
          <type>int</type>
          <declname>jogador</declname>
        </param>
        <briefdescription>
<para>Devolve uma coordenada sob a forma de string formatada para ser apresentada ao utilizador. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>e</parametername>
</parameternamelist>
<parameterdescription>
<para>Apontador para o estado </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>indice_jogada</parametername>
</parameternamelist>
<parameterdescription>
<para>Indice da jogada a ser procruada </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>jogador</parametername>
</parameternamelist>
<parameterdescription>
<para>jogador que efetuou a jogada pretendida </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="bot/interface.h" line="29" column="7" bodyfile="bot/interface.c" bodystart="126" bodyend="134" declfile="bot/interface.h" declline="29" declcolumn="7"/>
      </memberdef>
      <memberdef kind="function" id="bot_2interface_8h_1a7c17bb9ba6133664ce9e7ac864408e5a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mostrar_jogadas</definition>
        <argsstring>(ESTADO *e, FILE *stream)</argsstring>
        <name>mostrar_jogadas</name>
        <param>
          <type><ref refid="structESTADO" kindref="compound">ESTADO</ref> *</type>
          <declname>e</declname>
        </param>
        <param>
          <type>FILE *</type>
          <declname>stream</declname>
        </param>
        <briefdescription>
<para>Função que apresenta as jogadas efetuadas no jogo atual, ou seja, o array JOGADAS do estado. As jogadas são apresentadas na stream fornecida como argumento que será um apontador para um ficheiro ou stdout. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>e</parametername>
</parameternamelist>
<parameterdescription>
<para>Apontador para o estado </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>stream</parametername>
</parameternamelist>
<parameterdescription>
<para>Apontador para FILE </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="bot/interface.h" line="36" column="6" bodyfile="bot/interface.c" bodystart="136" bodyend="157" declfile="bot/interface.h" declline="36" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="bot_2interface_8h_1ae617e972a55e52efc4670271ba5443a4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void printar_campeao</definition>
        <argsstring>(ESTADO *estado)</argsstring>
        <name>printar_campeao</name>
        <param>
          <type><ref refid="structESTADO" kindref="compound">ESTADO</ref> *</type>
          <declname>estado</declname>
        </param>
        <briefdescription>
<para>Funcão que apresenta no ecrã o vencedor do jogo atual. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>estado</parametername>
</parameternamelist>
<parameterdescription>
<para>Apontador para o estado </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="bot/interface.h" line="41" column="6" declfile="bot/interface.h" declline="41" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="bot_2interface_8h_1a24da95ebeede4a540e37790ce8be359b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int interpretador</definition>
        <argsstring>(ESTADO *e)</argsstring>
        <name>interpretador</name>
        <param>
          <type><ref refid="structESTADO" kindref="compound">ESTADO</ref> *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
<para>Função que controla o Input/Output do jogo. Apresenta no ecrã, em primeiro lugar, o estado atual do tabuleiro e o prompt. Além disso,lê o input do utilizador e interpreta os comandos/jogadas que este efetuar e chama as devidas funções. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>e</parametername>
</parameternamelist>
<parameterdescription>
<para>Apontador para o estado </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="bot/interface.h" line="48" column="5" bodyfile="bot/interface.c" bodystart="265" bodyend="425" declfile="bot/interface.h" declline="48" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="bot_2interface_8h_1a435cb58c045dbe7fd28f87ba619ea3ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="bot_2dados_8h_1aba243e468d4afc4cc209ed6adf5251b5" kindref="member">COMANDO</ref></type>
        <definition>COMANDO verifica_comando</definition>
        <argsstring>(char *token)</argsstring>
        <name>verifica_comando</name>
        <param>
          <type>char *</type>
          <declname>token</declname>
        </param>
        <briefdescription>
<para>Função que verifica se o comando escrito pelo utilizador é um dos possíveis de serem feitos. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>token</parametername>
</parameternamelist>
<parameterdescription>
<para>Apontador para caracter </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="bot/interface.h" line="53" column="9" bodyfile="bot/interface.c" bodystart="174" bodyend="182" declfile="bot/interface.h" declline="53" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="bot_2interface_8h_1a4feef22da348ee5e5790e65ebc8cfa9c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void guarda_estado</definition>
        <argsstring>(ESTADO *e, ESTADO *copia_estado)</argsstring>
        <name>guarda_estado</name>
        <param>
          <type><ref refid="structESTADO" kindref="compound">ESTADO</ref> *</type>
          <declname>e</declname>
        </param>
        <param>
          <type><ref refid="structESTADO" kindref="compound">ESTADO</ref> *</type>
          <declname>copia_estado</declname>
        </param>
        <briefdescription>
<para>Função que guarda o estado atual do tabuleiroe das jogadas num &quot;estado copia&quot;. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Apontador</parametername>
</parameternamelist>
<parameterdescription>
<para>para o estado atual </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Apontador</parametername>
</parameternamelist>
<parameterdescription>
<para>para o estado copia </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="bot/interface.h" line="59" column="6" declfile="bot/interface.h" declline="59" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="bot_2interface_8h_1a99ce84fff9314f1690bc357232a62b17" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void repor_estado</definition>
        <argsstring>(ESTADO *e, ESTADO *copia_estado)</argsstring>
        <name>repor_estado</name>
        <param>
          <type><ref refid="structESTADO" kindref="compound">ESTADO</ref> *</type>
          <declname>e</declname>
        </param>
        <param>
          <type><ref refid="structESTADO" kindref="compound">ESTADO</ref> *</type>
          <declname>copia_estado</declname>
        </param>
        <briefdescription>
<para>Função que guarda no estado atual o tabuleiro e as jogados do &quot;estado copia&quot;. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Apontador</parametername>
</parameternamelist>
<parameterdescription>
<para>para o estado atual </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Apontador</parametername>
</parameternamelist>
<parameterdescription>
<para>para o estado copia </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="bot/interface.h" line="65" column="6" declfile="bot/interface.h" declline="65" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="bot_2interface_8h_1aa6b1d54b3b688e0b316ce980dde89a49" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int pos</definition>
        <argsstring>(ESTADO *e, ESTADO *copia_estado, char *token)</argsstring>
        <name>pos</name>
        <param>
          <type><ref refid="structESTADO" kindref="compound">ESTADO</ref> *</type>
          <declname>e</declname>
        </param>
        <param>
          <type><ref refid="structESTADO" kindref="compound">ESTADO</ref> *</type>
          <declname>copia_estado</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>token</declname>
        </param>
        <briefdescription>
<para>Função que guarda no estado atual o tabuleiro e as jogados do &quot;estado copia&quot;. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Apontador</parametername>
</parameternamelist>
<parameterdescription>
<para>para o estado atual </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Apontador</parametername>
</parameternamelist>
<parameterdescription>
<para>para o estado copia </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Token</parametername>
</parameternamelist>
<parameterdescription>
<para>que poderá corresponder ao número da jogada para qual se pretende voltar </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="bot/interface.h" line="72" column="5" declfile="bot/interface.h" declline="72" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="bot_2interface_8h_1acbc160d68b752a03bfda02407925385d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ler_tabuleiro</definition>
        <argsstring>(ESTADO *e, FILE *file_pointer)</argsstring>
        <name>ler_tabuleiro</name>
        <param>
          <type><ref refid="structESTADO" kindref="compound">ESTADO</ref> *</type>
          <declname>e</declname>
        </param>
        <param>
          <type>FILE *</type>
          <declname>file_pointer</declname>
        </param>
        <briefdescription>
<para>Função que lê o tabuleiro de um ficheiro e guarda no estado atual o array tab e a <ref refid="structCOORDENADA" kindref="compound">COORDENADA</ref> da última jogda. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>e</parametername>
</parameternamelist>
<parameterdescription>
<para>Apontador para o estado </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>file_pointer</parametername>
</parameternamelist>
<parameterdescription>
<para>Apontador para FILE </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="bot/interface.h" line="78" column="6" bodyfile="bot/interface.c" bodystart="185" bodyend="212" declfile="bot/interface.h" declline="78" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="bot_2interface_8h_1ae371cb491203403189792f5b9c099a91" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ler_jogadas</definition>
        <argsstring>(ESTADO *e, FILE *file_pointer)</argsstring>
        <name>ler_jogadas</name>
        <param>
          <type><ref refid="structESTADO" kindref="compound">ESTADO</ref> *</type>
          <declname>e</declname>
        </param>
        <param>
          <type>FILE *</type>
          <declname>file_pointer</declname>
        </param>
        <briefdescription>
<para>Função que lê a lista de jogadas pela forma como foram gravadas no ficheiro. Ou seja, uma jogada em cada linha. Acrescenta cada jogada ao array JOGADAS do estado atual. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>e</parametername>
</parameternamelist>
<parameterdescription>
<para>Apontador para o estado </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>file_pointer</parametername>
</parameternamelist>
<parameterdescription>
<para>Apontador para FILE </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="bot/interface.h" line="85" column="6" bodyfile="bot/interface.c" bodystart="214" bodyend="237" declfile="bot/interface.h" declline="85" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="bot_2interface_8h_1ad8252e5b7b8886a4a92cb9838c97b71e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ler_prompt</definition>
        <argsstring>(ESTADO *e, FILE *file_pointer)</argsstring>
        <name>ler_prompt</name>
        <param>
          <type><ref refid="structESTADO" kindref="compound">ESTADO</ref> *</type>
          <declname>e</declname>
        </param>
        <param>
          <type>FILE *</type>
          <declname>file_pointer</declname>
        </param>
        <briefdescription>
<para>Função que lê o prompt que foi gravado num ficheiro. Atualiza o estado com os valores do número de jogadas, jogador atual número de comandos. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>e</parametername>
</parameternamelist>
<parameterdescription>
<para>Apontador para o estado </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>file_pointer</parametername>
</parameternamelist>
<parameterdescription>
<para>Apontador para FILE </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="bot/interface.h" line="92" column="6" declfile="bot/interface.h" declline="92" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="bot_2interface_8h_1af41bd6121813ccf79152e32bc63d28ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gravar</definition>
        <argsstring>(ESTADO *e, char *nome_ficheiro)</argsstring>
        <name>gravar</name>
        <param>
          <type><ref refid="structESTADO" kindref="compound">ESTADO</ref> *</type>
          <declname>e</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>nome_ficheiro</declname>
        </param>
        <briefdescription>
<para>Função que dado um nome de um ficheiro, grava o tabuleiro, o prompt e a a lista de jogadas no mesmo. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>e</parametername>
</parameternamelist>
<parameterdescription>
<para>Apontador para o estado </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nome_ficheiro</parametername>
</parameternamelist>
<parameterdescription>
<para>Apontador para carácter (primeiro carácter do nome do ficheiro) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="bot/interface.h" line="98" column="6" bodyfile="bot/interface.c" bodystart="159" bodyend="172" declfile="bot/interface.h" declline="98" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="bot_2interface_8h_1a898e00d9cc5f81872bcad1e42b198c36" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ler</definition>
        <argsstring>(ESTADO *e, char *nome_ficheiro)</argsstring>
        <name>ler</name>
        <param>
          <type><ref refid="structESTADO" kindref="compound">ESTADO</ref> *</type>
          <declname>e</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>nome_ficheiro</declname>
        </param>
        <briefdescription>
<para>Função que dado um nome de um ficheiro, lê do mesmo o estado do jogo através da leitura do tabuleiro, do prompt e da lista de jogadas. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>e</parametername>
</parameternamelist>
<parameterdescription>
<para>Apontador para o estado </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nome_ficheiro</parametername>
</parameternamelist>
<parameterdescription>
<para>Apontador para carácter (primeiro caracter do nome do ficheiro) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="bot/interface.h" line="105" column="6" bodyfile="bot/interface.c" bodystart="239" bodyend="256" declfile="bot/interface.h" declline="105" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="bot_2interface_8h_1a932b1167634e8f55788e89f6b8b91081" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int verificanumero</definition>
        <argsstring>(char token)</argsstring>
        <name>verificanumero</name>
        <param>
          <type>char</type>
          <declname>token</declname>
        </param>
        <briefdescription>
<para>Função que verifica se um dado carácter, &quot;token&quot;, é um digito ou não. Devolve 1 caso for digito, 0 caso contrário. <linebreak/>
 </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>token</parametername>
</parameternamelist>
<parameterdescription>
<para>Carácter a ser verificado se é digito </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="bot/interface.h" line="110" column="5" bodyfile="bot/interface.c" bodystart="8" bodyend="15" declfile="bot/interface.h" declline="110" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="bot_2interface_8h_1a3dcaa3f4bfab0f1e7c4597697edf2d14" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void altera_tabuleiro</definition>
        <argsstring>(ESTADO *estado)</argsstring>
        <name>altera_tabuleiro</name>
        <param>
          <type><ref refid="structESTADO" kindref="compound">ESTADO</ref> *</type>
          <declname>estado</declname>
        </param>
        <briefdescription>
<para>Função que preenche o tabuleiro de acordo com as jogadas efetuadas até a n-ésima jogada, onde n é o número de jogadas atual. Útil utilizá-la sempre que é efetuada uma jogada de modo a se preocupar apenas em alterar o número de jogadas mediante a necessidade, podendo ser uma função reutilizada tanto para o comando se jogar normal como também após ter sido efetuado um comando &quot;pos&quot; . </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>estado</parametername>
</parameternamelist>
<parameterdescription>
<para>Appontador para o estado do jogo </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="bot/interface.h" line="118" column="6" bodyfile="bot/interface.c" bodystart="33" bodyend="89" declfile="bot/interface.h" declline="118" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="bot_2interface_8h_1afe7ce08eb320b5bffe145656c39c55ad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void alterna_situacao_pos</definition>
        <argsstring>(int *salva_num_jogadas, int *salva_jogador_atual, ESTADO *estado)</argsstring>
        <name>alterna_situacao_pos</name>
        <param>
          <type>int *</type>
          <declname>salva_num_jogadas</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>salva_jogador_atual</declname>
        </param>
        <param>
          <type><ref refid="structESTADO" kindref="compound">ESTADO</ref> *</type>
          <declname>estado</declname>
        </param>
        <briefdescription>
<para>Função de rotina criada pois tais processos feitos por ela é comum a diversas partes do interpretador. É ativada quando a flag_pos = 1, por tanto há que preparar o código para tais situações de &quot;pos&quot; encadeados. Tal função realiza tais operações de preparação. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>salva_num_jogadas</parametername>
</parameternamelist>
<parameterdescription>
<para>apontador para um inteiro que representa o número de jogadas salvo na função chamadora </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>salva_jogador_atual</parametername>
</parameternamelist>
<parameterdescription>
<para>apontador para um inteiro que representa o jogador_atual salvo na função chamadora </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>estado</parametername>
</parameternamelist>
<parameterdescription>
<para>Apontador para o estado do jogo </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="bot/interface.h" line="127" column="6" bodyfile="bot/interface.c" bodystart="258" bodyend="263" declfile="bot/interface.h" declline="127" declcolumn="6"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="5"><highlight class="preprocessor">#ifndef<sp/>CAMADA_INTERFACE_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CAMADA_INTERFACE_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="bot_2interface_8h_1aeaf835741929328f7b63aa297cae7b9d" kindref="member">mostrar_tabuleiro</ref>(<ref refid="structESTADO" kindref="compound">ESTADO</ref><sp/>*<sp/>estado,<sp/>FILE<sp/>*<sp/>stream);</highlight></codeline>
<codeline lineno="22"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="bot_2interface_8h_1a1fd532d3d252ff42d406a15757e2a401" kindref="member">mostrar_prompt</ref>(<ref refid="structESTADO" kindref="compound">ESTADO</ref><sp/>*<sp/>e);</highlight></codeline>
<codeline lineno="29"><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/><ref refid="bot_2interface_8h_1a23d957b85a87301d978ca029c5f44e68" kindref="member">obtem_jogada</ref>(<ref refid="structESTADO" kindref="compound">ESTADO</ref><sp/>*e,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>indice_jogada,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>jogador);</highlight></codeline>
<codeline lineno="36"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="bot_2interface_8h_1a7c17bb9ba6133664ce9e7ac864408e5a" kindref="member">mostrar_jogadas</ref><sp/>(<ref refid="structESTADO" kindref="compound">ESTADO</ref><sp/>*<sp/>e,<sp/><sp/>FILE<sp/>*<sp/>stream);</highlight></codeline>
<codeline lineno="41"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="bot_2interface_8h_1ae617e972a55e52efc4670271ba5443a4" kindref="member">printar_campeao</ref>(<ref refid="structESTADO" kindref="compound">ESTADO</ref><sp/>*<sp/>estado);</highlight></codeline>
<codeline lineno="48"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="bot_2interface_8h_1a24da95ebeede4a540e37790ce8be359b" kindref="member">interpretador</ref>(<ref refid="structESTADO" kindref="compound">ESTADO</ref><sp/>*e);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><ref refid="bot_2dados_8h_1aba243e468d4afc4cc209ed6adf5251b5" kindref="member">COMANDO</ref><sp/><ref refid="bot_2interface_8h_1a435cb58c045dbe7fd28f87ba619ea3ee" kindref="member">verifica_comando</ref>(<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>token<sp/>);</highlight></codeline>
<codeline lineno="59"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="bot_2interface_8h_1a4feef22da348ee5e5790e65ebc8cfa9c" kindref="member">guarda_estado</ref>(<ref refid="structESTADO" kindref="compound">ESTADO</ref><sp/>*<sp/>e,<sp/><ref refid="structESTADO" kindref="compound">ESTADO</ref><sp/>*<sp/>copia_estado);</highlight></codeline>
<codeline lineno="65"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="bot_2interface_8h_1a99ce84fff9314f1690bc357232a62b17" kindref="member">repor_estado</ref>(<ref refid="structESTADO" kindref="compound">ESTADO</ref><sp/>*e,<sp/><ref refid="structESTADO" kindref="compound">ESTADO</ref><sp/>*<sp/>copia_estado);<sp/></highlight></codeline>
<codeline lineno="72"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="bot_2interface_8h_1aa6b1d54b3b688e0b316ce980dde89a49" kindref="member">pos</ref>(<ref refid="structESTADO" kindref="compound">ESTADO</ref><sp/>*<sp/>e,<sp/><ref refid="structESTADO" kindref="compound">ESTADO</ref><sp/>*<sp/>copia_estado,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>token);</highlight></codeline>
<codeline lineno="78"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="bot_2interface_8h_1acbc160d68b752a03bfda02407925385d" kindref="member">ler_tabuleiro</ref>(<ref refid="structESTADO" kindref="compound">ESTADO</ref><sp/>*<sp/>e,<sp/>FILE<sp/>*<sp/>file_pointer);</highlight></codeline>
<codeline lineno="85"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="bot_2interface_8h_1ae371cb491203403189792f5b9c099a91" kindref="member">ler_jogadas</ref>(<ref refid="structESTADO" kindref="compound">ESTADO</ref><sp/>*<sp/>e,<sp/>FILE<sp/>*<sp/>file_pointer);</highlight></codeline>
<codeline lineno="92"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="bot_2interface_8h_1ad8252e5b7b8886a4a92cb9838c97b71e" kindref="member">ler_prompt</ref>(<ref refid="structESTADO" kindref="compound">ESTADO</ref><sp/>*e,FILE*<sp/>file_pointer);</highlight></codeline>
<codeline lineno="98"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="bot_2interface_8h_1af41bd6121813ccf79152e32bc63d28ee" kindref="member">gravar</ref><sp/>(<ref refid="structESTADO" kindref="compound">ESTADO</ref><sp/>*<sp/>e,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>nome_ficheiro);</highlight></codeline>
<codeline lineno="105"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="bot_2interface_8h_1a898e00d9cc5f81872bcad1e42b198c36" kindref="member">ler</ref><sp/>(<ref refid="structESTADO" kindref="compound">ESTADO</ref><sp/>*<sp/>e,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>nome_ficheiro);</highlight></codeline>
<codeline lineno="110"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="bot_2interface_8h_1a932b1167634e8f55788e89f6b8b91081" kindref="member">verificanumero</ref><sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>token);</highlight></codeline>
<codeline lineno="118"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="bot_2interface_8h_1a3dcaa3f4bfab0f1e7c4597697edf2d14" kindref="member">altera_tabuleiro</ref>(<ref refid="structESTADO" kindref="compound">ESTADO</ref><sp/>*estado);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="bot_2interface_8h_1afe7ce08eb320b5bffe145656c39c55ad" kindref="member">alterna_situacao_pos</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*salva_num_jogadas,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*salva_jogador_atual,<sp/><ref refid="structESTADO" kindref="compound">ESTADO</ref><sp/>*estado);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="bot/interface.h"/>
  </compounddef>
</doxygen>
