<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="bot_8h" kind="file" language="C++">
    <compoundname>bot.h</compoundname>
    <includedby refid="bot-main_8c" local="yes">bot/bot-main.c</includedby>
    <includedby refid="bot_8c" local="yes">bot/bot.c</includedby>
      <sectiondef kind="func">
      <memberdef kind="function" id="bot_8h_1a0b73ce203e43dbd80141314fc5627515" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void jogar_bot</definition>
        <argsstring>(ESTADO *e)</argsstring>
        <name>jogar_bot</name>
        <param>
          <type><ref refid="structESTADO" kindref="compound">ESTADO</ref> *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
<para>Executa a jogada do bot. Efetua primeiro o que acontece se aplicarmos a estratégia da paridade. Caso for aplicada e ganharmos o jogo então será essa a jogada escolhida. Caso contrário é executada a estratégia floodfill. Tal estratégia não é tão complexa como a da paridade, por isso pode deixar pontas soltas , então aplicamos uma nova jogada(baseada na paridade) após ter aplicada a floodfill. Se com essa nova jogada for possível ganhar o jogo ou se a floodfill foi aplicada quando não havia hipóteses de chegar até a casa da vitória (representado pelo falo {3,4}) então quer dizer que não devemos aplicar a floodfill, ou seja, se tivéssemos aplicado iríamos ter perdido logo depois. Nesse caso aplicamos então a paridade. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>e</parametername>
</parameternamelist>
<parameterdescription>
<para>Apontador para o estado </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="bot/bot.h" line="18" column="6" bodyfile="bot/bot.c" bodystart="10" bodyend="37" declfile="bot/bot.h" declline="18" declcolumn="6"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="5"><highlight class="preprocessor">#ifndef<sp/>BOT_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BOT_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="bot_8h_1a0b73ce203e43dbd80141314fc5627515" kindref="member">jogar_bot</ref>(<ref refid="structESTADO" kindref="compound">ESTADO</ref><sp/>*<sp/>e);</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="bot/bot.h"/>
  </compounddef>
</doxygen>
